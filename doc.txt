麻将麻将判断（角色的判断）算法

最后更新：2008年4月9日

将描述给出的方法以高速进行麻将的麻将判断。

麻将的判断是通过使用普通的背面轨道法进行，但背面轨道方法是每总检查面候选物的组合，存在需要花费很长的时间来处理的问题。这并不是说，处理时间是一个问题，如果只希望运行一次，在的情况下，例如重复在这种思想常规的判定处理中，要求能以高速进行处理。在这篇文章中，解释做出决定，以高的速度和在这种情况下使用的索引。

首先，解释了正常的方法方法引入使用索引的方法。

按正常方式（回迹法）

如果有可能的瓦片手划分到Suzumeatama之一和四个面麻将的一种形式。（七子十三孤儿是例外）

如果没有重叠构成瓦四个脸和Suzumeatama可确定以任何顺序取出。然而，如果重叠瓦片构成Suzumeatama和面对四个，与Suzumeatama瓦片的人们将能够捕获即使是面。例如，当12333345的砖，如果掌握了3和Suzumeatama，但它是可以取出剩余123345作为面部，并捕获3和面（Kokuko），其余的12345，以取出Suzumeatama不能。

因此，有必要检查麻将的形式，是否没有作出尝试所有的候选人Suzumeatama和脸。关于如何调查所有这样的组合中，使用回轨道方法。

在施加后轨方法，使用该Suzumeatama的总有一个，谁取出在Suzumeatama→面的顺序是，再次需要较少的次数。如何去掉脸上，无论是取出Kokuko较早，或顺子之前冒了出来，我不能在一个或其他决定。麻将麻将是，因为它是采用一个较大的数字的规则，例如，是否捕获和三个Kokuko的111222333，是否视为3喇叭纯子，替换什么由剩余麻雀头面部的作用这取决于是否。如果麻雀头顺子，包括1,9，和平，张军的休息，变得像一个杯子口，比分比捕获和顺子越高。如果不是这种情况下，超过一个杯口，最好是捕捉到一个三豆沙好，所以，最好是要取出作为Kokuko。也就是说，如果取出一个人拥有多个左侧为麻将候选，有必要确定调查其分数。然而，取出顺序的Kokuko和纯子成为一个问题是只在前面三豆瓣酱和Ichisakazuki开口，图案，如取出Kokuko和纯子交替不是必需的情况。因此，Suzumeatama→Kokuko→顺子，它涉及到应该尝试的Suzumeatama→顺子→Kokuko两种方式的顺序。

通常情况下，瓷砖构成的脸没有那么多，组合的号码找到重叠不会有太多。然而，在麻将由瓦片手构成的情况下，是一种类型的瓷砖，如精一的，组合的数目增加，增加了处理时间而言。结果处理时间研究了如何用瓷砖手变化如下。

- 1000万次在执行（Java5的，为3.0GHz的Pentium4的测量结果）时的处理时间

麻将牌：123567 123567曦曦
回到赛道方法4297ms 

麻将牌：111234678 Higashihigashi东部和西部西部
回溯4391ms 

麻将牌：11122223333444 
回溯法4891ms 

为重叠较大，可以确认的是，处理时间增加。
使用索引方法

预先检查麻将的形状，持有作为指标，用于判断麻将只搜索索引的方法。
只需持有麻将形状的瓷砖组合，组合的约17百万的方式数是※，如果你有代表34型种6位，14张组合的瓷砖，以6×14 = 84bit需要接下来，约1.4Gbit = 175MB左右须持有1700万的方式，存储区至少84bit的×1700 10000 = 1,428,000,000bit =。
※http://www10.plala.or.jp/rascalhp/mjmath.htm 

鉴于普通的计算机存储器是，例如1GB，它也可以保持麻将的瓦片的组合。然而，如果存在，可以在保持在存储区域中保持的方式，可以说是有方式的人是理想的。
如何连续切片中的索引数

为了确定是否麻将的形式，或瓦是字符瓦之一，或者是Sakuko之一这并不重要。砖以及是否号码的数目是连续，如123是足以知道。因此，通过更换瓦片是连续的列数，所以可以减少检查麻将的组合的数量。当显示以如下方式置换的具体例子。

“123”→“111” 
，“567”→“111” ，“111”→“3”

，“333”→“3” 
，“234456”→“11211” 

是由相同编号的列中的不同瓦片的组合取代我认为就可以看出。因为它通常不是平铺一方面它是连续的所有瓦片手是由多组连续的数字的数目来表示。因此，要利用替换为一组瓦片的数目的该图块为指标的连续的组合。因为索引方便处理作为数字值，在一个由连接在一起的一组砖是在“0”的连续数表示。然后瓦手由多个替换，如以下内容。

“123567 123567兮”→“11101110111011102” 

“111234678 Higashihigashi东部和西部西部大开发”→“311101110302” 

，“11122223333444”→“3443” 

举行数字化麻将作为一种指标，无论是麻将的形状寻找索引到测定时，有必要进行比较的数字处理。对于普通的电脑是32位的电脑，比较数字的时候，如果数字是32位之内，更容易处理。如果有按照上述规则瓦片手数值，为数字最差，如：长度。

“13579 13579东南西北”→“101010101010101010101010101”（27位）

，因为直到第一个同瓦数是四，由一个数字来表示，需要3位×在3位27位= 81bit。按照这一速度，笨重作为一个指标。因此，通过利用它从未如下事实“0”为2以上，以及0至设定前面的图，编码的比特序列按照以下规则进行。

“1”→“0” 
，“2”→“110” ，“3”→“11110”

，“4”→“1111110” ，“10”→“10”

，“20”→“1110” ，“30”→“111110”

，“ 40“→”11111110“ 

时的数字串是根据上述编码规则转换成一个比特串，而不管下一数是否为”0“时，编码成与下面的规则位串，下一个数字是”0“情况下加入“10”，否则为“0”可以被添加到“0”。

“1”→“，” 
“2”→“11” 
，“3”→“1111” 
，“4”→“111111” 

的编码上述规则，如下以前瓦片手进行编码。

“13579 13579东南西北” 
→“101010101010101010101010101”（编码前）
→“101010101010101010101010100”（编码后），

以便编码后，已经成为一个位串，位号，81bit之前的编码编码后是27bit。因为它是32位的范围内，容易处理作为指标。因此，当该指数在上述规则编码通过检查麻将的所有的形式进行。
发现在所有麻将的形式

当由瓦片手的连续块的数目表示，在麻将的形状，这取决于面部是否纯子或Kokuko，分为以下的图案。

“111”，“111”，“111”，“111”，“2”（全部纯子）
“111”，“111”，“111”，“3”，“2”（一Kokuko）
“111”，“111”，“3”，“ 3“，”2“（两个是Kokuko）
”111“，”3“，”3“，”3“，”2“（三个都是Kokuko）
是”3“，”3“，”3“，”3“，”2“（4 Kokuko） 
，“2”，“2”，“2”，“2”，“2”，“2”，和“2”（Nanataiko）※7泰科可能并不免除

除了这些，子露（傍，齐，考虑到本案的手瓦那里有一个杠）的，

“111”，“111”，“111”，“2”（全顺子，子露之一）

还增加了所谓的模式。

在每个模式，存在瓦片重叠的情况下，都可以在考虑它们的列举。例如，如果所有的纯子的，有一个图案，如以下内容。

“11211”，“111”，“111”，“2” 
，“222”，“111”，“111”，“2” 。

在瓦片的数目的情况下，砖的顺序也必须考虑。接下来的两个将被转换为一个不同的号码。

“11345789 123567”→“2”，“111”，“111”，“111”，“111” 
，“345 789 123567 Higashihigashi”→“111”，“111”，“111”，“111”，“ 2“ 

通过检查所有组合索引重叠，所述砖的砖的顺序的完成。
知道该面的结构

这足以搜索的指标，以确定是否麻将，但要确定角色，这瓷砖有什么馅饼需要看到是，是否Kokuko或顺子在麻雀头。所以，什么数字编码之前的数字串是最大的麻雀头是持有什么日无论是在指数顺子和Kokuko设置。为了保持面的结构中，要配置的脸的比特串的结构如以下。

较低
的3位Kokuko数
的顺子3比特数
的4位Suzumeatama位置
的4位脸部位置
的4位脸部位置
的4位脸部位置
4bit的脸部位置
上

脸的位置是在Kokuko→顺子的顺序来逐渐填补。
确定提前的作用

当创建一个索引，能够判断是从瓦片的数目的列表中的作用的一部分是连续的。例如，像下面这样可以预先确定。

“222”→一个杯子开口
“222”，“222”→两杯嘴
，“2”，“2”，“2”，“2”，“2”，“2”，“2”→Nanataiko 
“4111111113”→九莲
“111111111”→吞通过透

举行作为比特串的标志也有关可以预先一起面的结构中可以看出的作用。

较低
的3位Kokuko数
的顺子3比特数
的4位Suzumeatama位置
的4位脸部位置
的4位脸部位置
的4位脸部位置
4bit的脸部位置
1bit的七子旗
1位Kyuhasutakara灯旗
通过透旗1位一饮而尽
1位两杯口标志
1位Ichisakazuki开旗
高
寻求麻将的组合

如上所述，执行编码枚举麻将的所有组合，使脸的创建和作用的结构的预判。阵列产生的代码来创建使用Ruby语言，便于处理Java语言的一个HashMap（或TreeMap的）。募集检查结果，在麻将的形式图案的数目是9362的方式。

如果添加数字化麻将Java语言的HashMap的形式，检查或哈希表的大小是多少。其结果是，该散列表大小，成为16384。为了保持哈希表，至少32位×16384 = 4字节×16384 = 65,536byte = 约65KB是必需的。这就是，从个人计算机的存储器大小，足够小。另外，如果你想保留为TreeMap的，不需要哈希表的大小。
使用索引速度测量方法

通过使用以下所示的索引的方法进行麻将判定时的处理速度的测量结果。用于比较（背面轨道法）通常方法的处理时间也同时说明。

- 1000万次在执行（Java5的，为3.0GHz的Pentium4的测量结果）时的处理时间

麻将牌：123567 123567曦曦
回到赛道方法4297ms 
指数法（HashMap的）94ms 
指数法（TreeMap中）为125ms 

麻将牌：111234678 Higashihigashi东部和西部西部
回溯4391ms 
指数法（HashMap的）94ms 
指数法（TreeMap中）为125ms 

麻将牌：11122223333444 
回到赛道方法4891ms 
指数法（HashMap的）94ms 
指数法（TreeMap中）94ms 

相比，背迹法，45它可以看出，在50次的测定速度。此外，不论瓷砖手的，速度是稳定的。
摘要

为了确定麻将麻将，它表明，可以以高速通过使用索引来确定。示出的使用下面的索引的优点。

和决心能够以高速进行
时，角色的一部分可以事先确定
，不得免除七个孩子